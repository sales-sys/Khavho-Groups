rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Messages collection (for admin panel AND public contact forms)
    match /messages/{document} {
      // Anyone can create messages (contact form submissions)
      allow create: if validateContactData(request.resource.data);
      // Only authenticated admin users can read/update/delete
      allow read, update, delete: if isAdminUser();
    }
    
    // Users collection (for admin management and user authentication)
    match /users/{userId} {
      // Users can read/write their own data
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Admin users can read all user data
      allow read: if isAdminUser();
      // Admin users can update user roles (but not create/delete)
      allow update: if isAdminUser();
    }
    
    // Orders collection (for e-commerce functionality)
    match /orders/{document} {
      // Authenticated users can create orders
      allow create: if request.auth != null && validateOrderData(request.resource.data);
      // Users can read their own orders
      allow read: if request.auth != null && 
                     request.auth.uid == resource.data.userId;
      // Admin users can read/update all orders
      allow read, update: if isAdminUser();
    }
    
    // Products collection (public catalog with admin management)
    match /products/{document} {
      // Anyone can read products (public catalog)
      allow read: if true;
      // Only admin users can write products
      allow write: if isAdminUser();
    }
    
    // Carts collection (user shopping carts)
    match /carts/{userId} {
      // Users can read/write their own cart
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Admin users can read all carts (for support/analytics)
      allow read: if isAdminUser();
    }
    
    // Admin settings and configurations
    match /admin/{document} {
      allow read, write: if isAdminUser();
    }
    
    // Helper functions
    function isAdminUser() {
      return request.auth != null && 
             request.auth.uid != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function validateContactData(data) {
      return data.keys().hasAll(['email', 'message', 'timestamp', 'status']) &&
             data.email is string &&
             data.email.matches('.*@.*\\..*') &&
             data.message is string &&
             data.message.size() > 0 &&
             data.message.size() <= 5000 &&
             data.status == 'new' &&
             data.timestamp == request.time;
    }
    
    function validateOrderData(data) {
      return data.keys().hasAll(['userId', 'items', 'totalAmount', 'customerInfo', 'timestamp', 'status']) &&
             data.userId == request.auth.uid &&
             data.userId is string &&
             data.items is list &&
             data.items.size() > 0 &&
             data.totalAmount is number &&
             data.totalAmount > 0 &&
             data.customerInfo is map &&
             data.customerInfo.keys().hasAll(['firstName', 'lastName', 'email', 'phone']) &&
             data.status == 'pending' &&
             data.timestamp == request.time;
    }
  }
}